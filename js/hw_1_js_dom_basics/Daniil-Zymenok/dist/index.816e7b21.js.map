{"mappings":"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","sources":["src/app.js"],"sourcesContent":["const meshContainer = document.querySelector(\".mesh\");\r\nconst scoreContainer = document.querySelector(\".score\");\r\nconst gameStart = document.querySelector(\".btn_start \");\r\nconst fastModeBtn = document.querySelector(\".mode_500\");\r\nconst normalModeBtn = document.querySelector(\".mode_1000\");\r\nconst slowModeBtn = document.querySelector(\".mode_1500\");\r\n\r\nfastModeBtn.addEventListener('click', fastMode);\r\nnormalModeBtn.addEventListener('click', mediumMode);\r\nslowModeBtn.addEventListener('click', slowMode);\r\n\r\nfor (i = 0; i <= 24; i++) {\r\n    let item = document.createElement('div');\r\n    item.className = 'item';\r\n    meshContainer.append(item);\r\n}\r\nconst meshSize = meshContainer.children.length;\r\n\r\ngameStart.addEventListener('click', start);\r\n\r\nlet deactivateElement = null;\r\n\r\nscoreContainer.innerText = 0;\r\nlet activeIndex;\r\nlet currentScore = 0;\r\nlet fine = 0;\r\n\r\n\r\nlet gameIterationDuration = 1000;\r\n/**\r\n * @description Game speed\r\n */\r\nlet interval;\r\n\r\nfunction runGameIteration() {\r\n\r\n    if (deactivateElement) {\r\n        deactivateElement();\r\n    }\r\n\r\n    let randomIndex = getRandomNumber(meshSize);\r\n\r\n    if (randomIndex === activeIndex) {\r\n        randomIndex = getRandomNumber(meshSize);\r\n    }\r\n\r\n    activeIndex = randomIndex;\r\n\r\n    let activeElement = meshContainer.children[randomIndex];\r\n\r\n    if (activeElement) {\r\n        deactivateElement = activateElement(activeElement, randomIndex);\r\n    }\r\n    scoreContainer.innerText = currentScore;\r\n\r\n    fine = 0;\r\n\r\n    end();\r\n}\r\n\r\nfunction start() {\r\n    deactivateElement = null;\r\n    currentScore = 0;\r\n    interval = setInterval(runGameIteration, gameIterationDuration);\r\n}\r\n\r\nfunction end() {\r\n    if (currentScore >= 20) {\r\n        deactivateElement();\r\n        clearInterval(interval);\r\n        alert('You won');\r\n    } else if (currentScore <= -20) {\r\n        deactivateElement();\r\n        clearInterval(interval);\r\n        alert('You lost');\r\n    }\r\n}\r\n\r\nfunction slowMode() {\r\n    gameIterationDuration = 1500;\r\n    fastModeBtn.style.backgroundColor = '#002255';\r\n    normalModeBtn.style.backgroundColor = '#002255';\r\n    slowModeBtn.style.backgroundColor = 'green';\r\n}\r\n\r\nfunction mediumMode() {\r\n    gameIterationDuration = 1000;\r\n    fastModeBtn.style.backgroundColor = '#002255';\r\n    normalModeBtn.style.backgroundColor = 'green';\r\n    slowModeBtn.style.backgroundColor = '#002255';\r\n}\r\n\r\nfunction fastMode() {\r\n    gameIterationDuration = 500;\r\n    fastModeBtn.style.backgroundColor = 'green';\r\n    normalModeBtn.style.backgroundColor = '#002255';\r\n    slowModeBtn.style.backgroundColor = '#002255';\r\n}\r\n\r\nfunction score(e) {\r\n    e.stopPropagation();\r\n    ++fine;\r\n    if (fine <= 1) {\r\n        ++currentScore;\r\n        scoreContainer.innerText = currentScore;\r\n        clearInterval(interval);\r\n        deactivateElement();\r\n        interval = setInterval(runGameIteration, gameIterationDuration);\r\n        runGameIteration();\r\n    } else {\r\n        currentScore -= 2;\r\n        scoreContainer.innerText = currentScore;\r\n    }\r\n}\r\n\r\nfunction scoreboardColor() {\r\n    if (currentScore < 0) {\r\n        scoreContainer.style.backgroundColor = '#ff0000';\r\n    } else {\r\n        scoreContainer.style.backgroundColor = 'green';\r\n    }\r\n}\r\n\r\nfunction inactivity() {\r\n    if (fine === 0) {\r\n        currentScore -= 5;\r\n    }\r\n}\r\n\r\nfunction missTarget() {\r\n    currentScore -= 3;\r\n    scoreContainer.innerText = currentScore;\r\n};\r\n\r\nfunction activateElement(element, index) {\r\n    const variant = getVariantForIndex(index);\r\n    element.classList.add(\"item-highlighted\", variant);\r\n    element.addEventListener('click', score);\r\n    meshContainer.addEventListener('click', missTarget)\r\n\r\n    return function unhighlight() {\r\n        element.classList.remove(\"item-highlighted\", variant);\r\n        element.removeEventListener('click', score);\r\n        meshContainer.removeEventListener('click', missTarget);\r\n        inactivity();\r\n        scoreboardColor();\r\n    };\r\n}\r\n\r\n/**\r\n * @description This function takes an integer and returns a random integer between 0 and the given number\r\n */\r\nfunction getRandomNumber(max) {\r\n    return Math.floor(Math.random() * ((max - 1) + 1));\r\n}\r\n\r\nfunction getVariantForIndex() {\r\n    const variants = [\r\n        \"item-highlighted-1\",\r\n        \"item-highlighted-2\",\r\n        \"item-highlighted-3\",\r\n    ];\r\n    return variants[getRandomNumber(variants.length)];\r\n}"],"names":[],"version":3,"file":"index.816e7b21.js.map","sourceRoot":"/__parcel_source_root/"}